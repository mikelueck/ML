load("@bazel_gazelle//:def.bzl", "gazelle")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("//rules:gofmt.bzl", "gofmt_test")

buildifier(
    name = "buildifier",
)

gofmt_test()

go_binary(
    name = "server",
    embed = [":Chorus_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

# gazelle:prefix github.com/ML/Chorus
gazelle(name = "gazelle")

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
        "server.go",
    ],
    importpath = "main",
    visibility = ["//visibility:private"],
    deps = [
        "//chat/proto:chat_go_proto",
        "@com_github_google_uuid//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//credentials:go_default_library",
        "@org_golang_google_grpc//health:go_default_library",
        "@org_golang_google_grpc//health/grpc_health_v1:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_golang_x_net//context:go_default_library",
    ],
)

pkg_tar(
    name = "app-tar",
    srcs = [":server"],
    mode = "0755",
    package_dir = "/",
)

oci_image(
    name = "chat_server_image",
    base = "@ubuntu",
    cmd = ["/server"],
    env = {},
    exposed_ports = [
        "8080/tcp",
    ],
    tars = [":app-tar"],
)

#TODO
#oci_push(
#    name = "push-image",
#    image = ":chat_server_image",
#    repository = "localhost:4000/chat_server",
#repository = "us-central1-docker.pkg.dev/<something>/repo1/chat_server",
#    remote_tags = ["server"]
#)

oci_tarball(
    name = "tar-docker",
    format = "docker",
    image = ":chat_server_image",
    repo_tags = ["chat-server:v0.0.1"],
)

go_library(
    name = "Chorus_lib",
    srcs = [
        "main.go",
        "server.go",
    ],
    importpath = "github.com/ML/Chorus",
    visibility = ["//visibility:private"],
    deps = [
        "//chat/proto:go_default_library",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//health",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//status",
    ],
)
