// @generated by protoc-gen-es v2.2.5 with parameter "keep_empty_files=true,target=js+dts,import_extension=js"
// @generated from file canbiocin/proto/recipe.proto (syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Milling_Blending_Packaging, Packaging } from "./other_pb.js";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import type { Container } from "./container_pb.js";
import type { Probiotic } from "./probiotics_pb.js";
import type { Prebiotic } from "./prebiotics_pb.js";
import type { Postbiotic } from "./postbiotics_pb.js";
import type { Money } from "./money_pb.js";

/**
 * Describes the file canbiocin/proto/recipe.proto.
 */
export declare const file_canbiocin_proto_recipe: GenFile;

/**
 * @generated from message ProbioticIngredient
 */
export declare type ProbioticIngredient = Message<"ProbioticIngredient"> & {
  /**
   * @generated from field: string item = 1;
   */
  item: string;

  /**
   * @generated from field: int32 cfu_g = 2;
   */
  cfuG: number;
};

/**
 * Describes the message ProbioticIngredient.
 * Use `create(ProbioticIngredientSchema)` to create a new message.
 */
export declare const ProbioticIngredientSchema: GenMessage<ProbioticIngredient>;

/**
 * @generated from message PrebioticIngredient
 */
export declare type PrebioticIngredient = Message<"PrebioticIngredient"> & {
  /**
   * @generated from field: string item = 1;
   */
  item: string;

  /**
   * @generated from field: float mg_serving = 2;
   */
  mgServing: number;
};

/**
 * Describes the message PrebioticIngredient.
 * Use `create(PrebioticIngredientSchema)` to create a new message.
 */
export declare const PrebioticIngredientSchema: GenMessage<PrebioticIngredient>;

/**
 * @generated from message PostbioticIngredient
 */
export declare type PostbioticIngredient = Message<"PostbioticIngredient"> & {
  /**
   * @generated from field: string item = 1;
   */
  item: string;

  /**
   * @generated from field: float mg_serving = 2;
   */
  mgServing: number;
};

/**
 * Describes the message PostbioticIngredient.
 * Use `create(PostbioticIngredientSchema)` to create a new message.
 */
export declare const PostbioticIngredientSchema: GenMessage<PostbioticIngredient>;

/**
 * @generated from message Company
 */
export declare type Company = Message<"Company"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message Company.
 * Use `create(CompanySchema)` to create a new message.
 */
export declare const CompanySchema: GenMessage<Company>;

/**
 * @generated from message Recipe
 */
export declare type Recipe = Message<"Recipe"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: Company company = 7;
   */
  company?: Company;

  /**
   * @generated from field: repeated ProbioticIngredient probiotics = 3;
   */
  probiotics: ProbioticIngredient[];

  /**
   * @generated from field: repeated PrebioticIngredient prebiotics = 4;
   */
  prebiotics: PrebioticIngredient[];

  /**
   * @generated from field: repeated PostbioticIngredient postbiotics = 5;
   */
  postbiotics: PostbioticIngredient[];

  /**
   * @generated from field: repeated Packaging packaging = 8;
   */
  packaging: Packaging[];

  /**
   * @generated from field: int32 probiotic_overage_percent = 6;
   */
  probioticOveragePercent: number;
};

/**
 * Describes the message Recipe.
 * Use `create(RecipeSchema)` to create a new message.
 */
export declare const RecipeSchema: GenMessage<Recipe>;

/**
 * @generated from message RecipeDetails
 */
export declare type RecipeDetails = Message<"RecipeDetails"> & {
  /**
   * @generated from field: string id = 8;
   */
  id: string;

  /**
   * @generated from field: string name = 9;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 7;
   */
  time?: Timestamp;

  /**
   * @generated from field: Recipe recipe = 1;
   */
  recipe?: Recipe;

  /**
   * @generated from field: int32 serving_size_grams = 2;
   */
  servingSizeGrams: number;

  /**
   * @generated from field: int32 total_grams = 3;
   */
  totalGrams: number;

  /**
   * @generated from field: repeated IngredientDetails ingredients = 4;
   */
  ingredients: IngredientDetails[];

  /**
   * @generated from field: Container container = 5;
   */
  container?: Container;

  /**
   * @generated from field: repeated Packaging packaging = 11;
   */
  packaging: Packaging[];

  /**
   * @generated from field: int32 container_size_grams = 10;
   */
  containerSizeGrams: number;

  /**
   * @generated from field: int32 target_margin = 6;
   */
  targetMargin: number;

  /**
   * @generated from field: double currency_rate = 12;
   */
  currencyRate: number;
};

/**
 * Describes the message RecipeDetails.
 * Use `create(RecipeDetailsSchema)` to create a new message.
 */
export declare const RecipeDetailsSchema: GenMessage<RecipeDetails>;

/**
 * @generated from message Ingredient
 */
export declare type Ingredient = Message<"Ingredient"> & {
  /**
   * @generated from oneof Ingredient.item
   */
  item: {
    /**
     * @generated from field: Probiotic probiotic = 1;
     */
    value: Probiotic;
    case: "probiotic";
  } | {
    /**
     * @generated from field: Prebiotic prebiotic = 2;
     */
    value: Prebiotic;
    case: "prebiotic";
  } | {
    /**
     * @generated from field: Postbiotic postbiotic = 3;
     */
    value: Postbiotic;
    case: "postbiotic";
  } | {
    /**
     * @generated from field: Packaging packaging = 4;
     */
    value: Packaging;
    case: "packaging";
  } | {
    /**
     * @generated from field: Milling_Blending_Packaging blending = 5;
     */
    value: Milling_Blending_Packaging;
    case: "blending";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message Ingredient.
 * Use `create(IngredientSchema)` to create a new message.
 */
export declare const IngredientSchema: GenMessage<Ingredient>;

/**
 * @generated from message IngredientDetails
 */
export declare type IngredientDetails = Message<"IngredientDetails"> & {
  /**
   * @generated from field: Ingredient ingredient = 1;
   */
  ingredient?: Ingredient;

  /**
   * @generated from field: int32 desired_cfu_g = 9;
   */
  desiredCfuG: number;

  /**
   * @generated from field: double percent = 2;
   */
  percent: number;

  /**
   * @generated from field: double perserving_mg = 3;
   */
  perservingMg: number;

  /**
   * @generated from field: double total_grams = 4;
   */
  totalGrams: number;

  /**
   * @generated from field: Money cb_cost_kg = 5;
   */
  cbCostKg?: Money;

  /**
   * @generated from field: Money cb_cost_per_container = 6;
   */
  cbCostPerContainer?: Money;

  /**
   * @generated from field: Money client_cost_per_container = 11;
   */
  clientCostPerContainer?: Money;

  /**
   * @generated from field: Money cb_total = 7;
   */
  cbTotal?: Money;

  /**
   * @generated from field: Money client_total = 8;
   */
  clientTotal?: Money;

  /**
   * @generated from field: Money client_total_currency = 12;
   */
  clientTotalCurrency?: Money;
};

/**
 * Describes the message IngredientDetails.
 * Use `create(IngredientDetailsSchema)` to create a new message.
 */
export declare const IngredientDetailsSchema: GenMessage<IngredientDetails>;

